module(
    name = "org_trailcatalog",
    version = "0.0.0",
    compatibility_level = 1,
)

bazel_dep(name = "aspect_bazel_lib", version = "2.16.0")
bazel_dep(name = "aspect_rules_jest", version = "0.23.2")
bazel_dep(name = "aspect_rules_js", version = "2.3.7")
bazel_dep(name = "aspect_rules_ts", version = "3.5.3")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "com_google_elemental2")
archive_override(
    module_name = "com_google_elemental2",
    integrity = "sha256-oJmJqc3JvQAyqNk1XiIKs35agDH4tW6eLzPgAwfTWkc=",
    strip_prefix = "elemental2-9ea71d6b10195c841acde17ad14bd8677b05dea3",
    urls = ["https://github.com/google/elemental2/archive/9ea71d6b10195c841acde17ad14bd8677b05dea3.zip"],
)
bazel_dep(name = "com_google_geometry_s2")
git_override(
    module_name = "com_google_geometry_s2",
    commit = "c94b8f7ef55d6e56ea166a672887aeac41629f95",
    remote = "https://github.com/aschleck/s2-geometry-library-java",
)
#local_path_override(
#    module_name = "com_google_geometry_s2",
#    path = "../s2-geometry-library-java",
#)
bazel_dep(name = "com_google_j2cl")
archive_override(
    module_name = "com_google_j2cl",
    integrity = "sha256-kvjnq4RA9dPoNvn5XONzgw9tE7F4tj5esz23GPguEVE=",
    strip_prefix = "j2cl-b6950dc4a941eb8e482a8bebe355ef2b3be5b7d7",
    urls = ["https://github.com/google/j2cl/archive/b6950dc4a941eb8e482a8bebe355ef2b3be5b7d7.zip"],
)
bazel_dep(name = "com_google_jsinterop_base")
git_override(
    module_name = "com_google_jsinterop_base",
    commit = "dda001a659c58dea29caf431890a30a8f645036f",
    remote = "https://github.com/google/jsinterop-base",
)
bazel_dep(name = "dev_april_corgi")
archive_override(
    module_name = "dev_april_corgi",
    integrity = "sha256-wuo0h0vVnCTB33pCOkLhl+ALE+qlb1iM0KJemh7RolU=",
    strip_prefix = "corgi-55a56cc299358ec437396a51d98ca7513260ebb2",
    urls = ["https://github.com/aschleck/corgi/archive/55a56cc299358ec437396a51d98ca7513260ebb2.tar.gz"],
)
#local_path_override(
#    module_name = "dev_april_corgi",
#    path = "../corgi",
#)
bazel_dep(name = "io_bazel_rules_closure")
archive_override(
    module_name = "io_bazel_rules_closure",
    integrity = "sha256-zU306vgiWdqp1103YmI3SK6khr1LaqdGv5+6HF7YbsM=",
    strip_prefix = "rules_closure-f87c3374de464c12ad958df98872c28e7a5cfd11",
    urls = ["https://github.com/bazelbuild/rules_closure/archive/f87c3374de464c12ad958df98872c28e7a5cfd11.zip"],
)
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "protobuf", version = "30.2")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_java", version = "8.11.0")
bazel_dep(name = "rules_jvm_external", version = "6.7")
bazel_dep(name = "rules_kotlin", version = "2.1.4")
bazel_dep(name = "rules_nodejs", version = "6.3.5")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "rules_python", version = "1.4.1")
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "toolchains_llvm", version = "1.4.0")

# Overrides required by j2cl since neither of these are in BCR
git_override(
    module_name = "com_google_jsinterop_generator",
    commit = "411e77ca1e9f2b14243edc3f420352b0a3580c62",
    remote = "https://github.com/google/jsinterop-generator",
)
git_override(
    module_name = "rules_scala",
    commit = "219e63983e8e483e66ebf70372969ba227382001",
    remote = "https://github.com/mbland/rules_scala",
)
git_override(
    module_name = "rules_webtesting",
    commit = "7a1c88f61e35ee5ce0892ae24e2aa2a3106cbfed",
    remote = "https://github.com/bazelbuild/rules_webtesting",
)

# Overrides bazel_worker_java which marks junit testonly which breaks rules_closure...
bazel_dep(name = "bazel_worker_java", version = "0.0.4")

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(llvm_version = "20.1.2")
use_repo(llvm, "llvm_toolchain")
register_toolchains("@llvm_toolchain//:all")

java_toolchains = use_extension("@rules_java//java:extensions.bzl", "toolchains")
use_repo(java_toolchains, "remotejdk21_linux")
use_repo(java_toolchains, "remotejdk21_macos")
register_toolchains("@remotejdk21_linux//:all")
register_toolchains("@remotejdk21_macos//:all")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        # TODO(april): clean these up when we're confident we don't need them
        #"args4j:args4j:2.33",
        "com.fasterxml.jackson.core:jackson-databind:2.19.0",
        #"com.google.code.gson:gson:2.8.9",
        #"com.google.geometry:s2-geometry:2.0.0",
        #"com.google.guava:guava-gwt:33.4.8-jre",
        "com.google.guava:guava:33.4.8-jre",
        #"com.google.javascript:closure-compiler-unshaded:jar:v20230228",
        #"com.google.truth.extensions:truth-java8-extension:1.1.3",
        "com.google.truth:truth:1.4.4",
        "com.squareup.okhttp3:okhttp:4.12.0",
        "com.wolt.osm:parallelpbf:0.3.1",
        "com.zaxxer:HikariCP:5.1.0",
        "de.westnordost:osmapi:5.2",
        "io.javalin:javalin:5.6.5",
        "mil.nga.geopackage:geopackage:6.6.5",
        #"mil.nga:sf:2.2.1",
        #"mil.nga:tiff:3.0.0",
        "org.apache.commons:commons-text:1.13.1",
        #"org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.21",
        "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.10.2",
        "org.junit.jupiter:junit-jupiter:5.12.2",
        "org.locationtech.proj4j:proj4j-epsg:1.4.0",
        "org.locationtech.proj4j:proj4j:1.4.0",
        "org.postgresql:postgresql:42.7.5",
        "org.reflections:reflections:0.10.2",
        "org.sejda.imageio:webp-imageio:0.1.6",
        "org.slf4j:slf4j-simple:2.0.17",
        "org.wololo:flatgeobuf:3.27.1",
        #"org.xerial:sqlite-jdbc:3.42.0.0",
    ],
)
use_repo(maven, "maven")

j2cl_maven_import_external = use_repo_rule("@com_google_j2cl//build_defs:rules.bzl", "j2cl_maven_import_external")
j2cl_maven_import_external(
    name = "com_google_guava-j2cl",
    artifact = "com.google.guava:guava-gwt:33.4.8-jre",
    artifact_sha256 = "ec7864353821b18ace638e4ea5cc7902ca7aaec66447a0a2d2f35fa2734a1c6f",
    server_urls = ["https://repo1.maven.org/maven2/"],
    deps = [
        "@com_google_elemental2//:elemental2-promise-j2cl",
        "@com_google_errorprone_error_prone_annotations-j2cl",
        "@com_google_j2cl//:jsinterop-annotations-j2cl",
        "@com_google_j2objc_annotations-j2cl",
        "@org_jspecify_jspecify-j2cl",
    ],
)
j2cl_maven_import_external(
    name = "com_google_errorprone_error_prone_annotations-j2cl",
    annotation_only = True,
    artifact = "com.google.errorprone:error_prone_annotations:2.38.0",
    artifact_sha256 = "6661d5335090a5fc61dd869d2095bc6c1e2156e3aa47a6e4ababdf64c99a7889",
    server_urls = ["https://repo1.maven.org/maven2/"],
)
j2cl_maven_import_external(
    name = "com_google_j2objc_annotations-j2cl",
    annotation_only = True,
    artifact = "com.google.j2objc:j2objc-annotations:3.0.0",
    artifact_sha256 = "88241573467ddca44ffd4d74aa04c2bbfd11bf7c17e0c342c94c9de7a70a7c64",
    server_urls = ["https://repo1.maven.org/maven2/"],
)
j2cl_maven_import_external(
    name = "org_jspecify_jspecify-j2cl",
    annotation_only = True,
    artifact = "org.jspecify:jspecify:1.0.0",
    artifact_sha256 = "1fad6e6be7557781e4d33729d49ae1cdc8fdda6fe477bb0cc68ce351eafdfbab",
    server_urls = ["https://repo1.maven.org/maven2/"],
)

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(
    name = "nodejs",
    node_version = "22.14.0",
)
use_repo(node, "nodejs")

npm = use_extension(
    "@aspect_rules_js//npm:extensions.bzl",
    "npm",
    dev_dependency = True,
)
npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
)
use_repo(npm, "npm")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_java",
    digest = "sha256:0af43bf953d8cb07c0dd1c59aeaf817ada24eb8b1564532190012ff88afab4da",
    image = "gcr.io/distroless/java21",
)
use_repo(oci, "distroless_java")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = "3.11",
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "pip")

