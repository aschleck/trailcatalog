# It's extremely attractive to delete these tables and just use readable_id as the trail id. There
# are several reasons this actually isn't as nice as it seems.
#
# * The map controller and renderers use some hacks that assume it is a bigint ID
# * If it's a text string then it has to get the varsize and then skip an indeterminant number of
#   characters.
# * The map data decoder not only has to pull out a variable length string, it has to do utf-8
#   decoding to turn the int8[] into a string.
# * It's challenging to compute boundary IDs, so because I am lazy those are likely to stay bigint
#   anyway.
# * Ultimately we're shaving O(10) milliseconds off queries by inlining the table. And most of our
#   queries are viewport searches that likely slightly benefit from bigint keys.

[[actions]]
type = "create_table"
name = "trail_identifiers"
primary_key = ["numeric_id", "epoch"]

  [[actions.columns]]
  name = "numeric_id"
  nullable = false
  type = "BIGINT"

  [[actions.columns]]
  name = "readable_id"
  nullable = false
  type = "TEXT"

  [[actions.columns]]
  name = "epoch"
  nullable = false
  type = "INT"

  [actions.partition_by]
  list = ["epoch"]

[[actions]]
type = "add_index"
table = "trail_identifiers"

  [actions.index]
  name = "trail_identifiers_readable_idx"
  columns = ["readable_id", "epoch"]
  concurrently = false
  unique = true

